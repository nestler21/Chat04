openapi: 3.0.0
info:
  title: Chat04 Backend
  description: This is the Backend API for comunication with an API client. This API was developed by Group 04 of the 2023 WI-113 Networks Course as part of their exam.
  version: 1.0.0
paths:
  /register:
    post:
      operationId: app.register_account
      summary: Register a new account
      description: Registers a new account with a given username and a given password.
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: UserA
                password:
                  type: string
                  example: password21
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: User Account UserA succesfully created.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: SESSIONID=abcde12345; Path=/;
        '201':
          description: OK, no Session Cookie
          content:
            application/json:
              schema:
                type: string
                example: User Account UserA succesfully created. Session ID could not be created.
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: string
                example: Username UserA already in use.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
  /delete-account:
    post:
      operationId: app.delete_account
      summary: Delete an account
      description: Deletes the account associated with the SessionId if the provided password is correct.
      tags:
        - Account
      security:
        - sessionAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: password21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: User Account UserA succesfully deleted.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: SESSIONID=; Path=/;
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: You are currently not logged in.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: The provided password is incorrect.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
  /login:
    post:
      operationId: app.post_login
      summary: Login to user account
      description: Provides the caller with a SessionId associated with the given username.
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: UserA
                password:
                  type: string
                  example: password21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Succesfully logged in to account':' UserA
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: SESSIONID=abcde12345; Path=/;
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: User UserA not found.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: The provided password is incorrect.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Session ID could not be created.
  /username:
    get:
      operationId: app.get_username
      summary: Get username
      description: Returns the username that is associated with the provided SessionId
      tags:
        - Account
      security:
        - sessionAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: UserA
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: You are currently not logged in.
  /logout:
    post:
      operationId: app.logout
      summary: Log out from user account
      description: Logges out the current user by deleting the used Session and resetting the SESSIONID Cookie.
      tags:
        - Account
      security:
        - sessionAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Logged out.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: SESSIONID=; Path=/;
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Logged out.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
  /send/{receiver}:
    post:
      operationId: app.send_message
      summary: Send a message to a user
      description: Send a message to a specified user. Log in required.
      tags:
        - Message
      security:
        - sessionAuth: []
      parameters:
        - name: receiver
          in: path
          description: Username
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: Hello World!
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Message sent.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: You are currently not logged in.
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: Receiver UserB does not exists.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
  /receive:
    get:
      operationId: app.get_messages_info
      summary: List all chat partners with buffered messages
      description: Returns a list of all users from whom the user has unreceived / buffered messages together with the count of the messages
      tags:
        - Message
      security:
        - sessionAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: string
                      example: UserB
                    count:
                      type: integer
                      example: 2
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: You are currently not logged in.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
  /receive/{sender}:
    get:
      operationId: app.receive_messages_user
      summary: receive messages from a sender
      description: Returns all buffered messages from the specified sender together with a timestamp
      tags:
        - Message
      security:
        - sessionAuth: []
      parameters:
        - name: sender
          in: path
          description: Username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Hello World!
                    datetime:
                      type: string
                      example: '2023-04-28 10:49:46'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example: You are currently not logged in.
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                example: User UserB does not exists.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
                example: Error Message
components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      description: Cookie used for authentification of logged in users
      in: cookie
      name: SESSIONID
      x-apikeyInfoFunc: app.session_auth
